# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  userImage: String!
  name: String!
  age: Int!
  email: String!
  phoneNumber: String!
  userDetail: String!
  isTattooist: Boolean!
}

type TattooBodypart {
  id: Int!
  bodypart: String!
  size: String!
}

type TattooGenre {
  id: Int!
  genre: String!
}

type TattooMethod {
  id: Int!
  method: String!
}

type TattooRegion {
  id: Int!
  region: String!
}

type TattooTag {
  id: String!
  tag: String!
  tattoo: [Tattoo!]!
}

type Tattoo {
  id: String!
  name: String!
  description: String!
  process: String!
  price: Int!
  date: String!
  isTaken: Boolean!
  tattooMethod: TattooMethod!
  tattooGenre: TattooGenre!
  tattooBodypart: TattooBodypart!
  tattooRegion: TattooRegion!
  purchaser: User!
  tattooist: User!
  tattooTags: [TattooTag!]!
}

type Image {
  id: String!
  image: String!
  tattoo: Tattoo!
}

type Receipt {
  id: String!
  impUid: String!
  price: Int!
  tattooId: Tattoo!
  user: User!
  purchasedAt: DateTime!
  status: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TattooistReview {
  id: String!
  reviewDetail: String!
  reviewImage: String!
  rating: Int!
  tattooist: User!
}

type Query {
  fetchTattoos: [Tattoo!]!
  fetchTattoo(tattooId: String!): Tattoo!
  fetchTattooWithGenre(tattooGenreId: Float!): [Tattoo!]!
  fetchTattooWithDeleted: [Tattoo!]!
  fetchUser: User!
  fetchUsers: [User!]!
  fetchTattooists: [User!]!
  fetchTattooistReviews: [TattooistReview!]!
  fetchImage(tattooId: String!): Image!
  searchTattoos(keyword: String!): [Tattoo!]!
}

type Mutation {
  createTattoo(createTattooInput: CreateTattooInput!): Tattoo!
  updateTattoo(tattooId: String!, updateTattooInput: UpdateTattooInput!): Tattoo!
  deleteTattoo(tattooId: String!): Boolean!
  restoreTattoo(tattooId: String!): Boolean!
  createTattooGenre(genre: String!): TattooGenre!
  createTattooRegion(region: String!): TattooRegion!
  createTattooBodypart(bodypart: String!, size: String!): TattooBodypart!
  uploadFile(files: [Upload!]!): [String!]!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser: Boolean!
  createTattooistReview(createTattooistReviewInput: CreateTattooistReviewInput!): TattooistReview!
  userLogin(email: String!, password: String!): String!
  restoreAccessToken: String!
  logout: String!
  createReceipt(impUid: String!, price: Float!, tattooId: String!): Receipt!
  deleteReceipt(impUid: String!, price: Float!, tattooId: String!): Receipt!
  createImage(tattooId: String!, image: [String!]!): [Image!]!
}

input CreateTattooInput {
  name: String!
  price: Int!
  description: String
  process: String!
  date: String!
  tattooMethod: TattooMethodInput!
  tattooGenreId: Int!
  tattooRegionId: Int!
  tattooBodypartId: Int!
  tattooTags: [String!]!
}

input TattooMethodInput {
  method: String!
}

input UpdateTattooInput {
  name: String
  price: Int
  description: String
  process: String
  date: String
  tattooMethod: TattooMethodInput
  tattooGenreId: Int
  tattooRegionId: Int
  tattooBodypartId: Int
  tattooTags: [String!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateUserInput {
  id: String!
  name: String!
  userImage: String
  email: String!
  phoneNumber: String!
  age: Int!
  password: String!
  userDetail: String
  isTattooist: Boolean!
}

input UpdateUserInput {
  name: String!
  userDetail: String
}

input CreateTattooistReviewInput {
  reviewDetail: String!
  reviewImage: String
  rating: Int!
  tattooist: String!
}